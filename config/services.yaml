# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Services\ProductService:
        # arguments:
        #     $entityManager: '@doctrine.orm.entity_manager'
        #     $requestStack: '@request_stack'

    App\EventListener\LoginListener:
        # arguments:
        #     $requestStack: '@request_stack'
        # tags:
        #     - { name: 'kernel.event_listener', event: 'security.interactive_login', method: 'onSecurityInteractiveLogin' }

    App\EventListener\ShoppingcartStatusSubscriber:
        # tags:
        #     - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: -10 }
        # arguments:
        #     $entityManager: '@doctrine.orm.entity_manager'
        # tags: 
        #     - { name: 'kernel.event_subscriber' }

    App\Controller\ShopController:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'
            $requestStack: '@request_stack'
            $security: '@Symfony\Bundle\SecurityBundle\Security'
            $workflow: '@state_machine.checkout_process'
            $productService: '@App\Services\ProductService'
        
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
